name: Deploy to DigitalOcean

on:
  push:
    branches:
      - release

jobs:
  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          
      - name: Install Dependencies
        run: npm install
        
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.5
        env:
          FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
          FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
          FIREBASE_PRIVATE_KEY_ID: ${{ secrets.FIREBASE_PRIVATE_KEY_ID }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_CLIENT_ID: ${{ secrets.FIREBASE_CLIENT_ID }}
          JWT_EXPIRES_IN: ${{ secrets.JWT_EXPIRES_IN }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: ${{ secrets.PORT }}
        with:
          host: ${{ secrets.DO_DROPLET_IP }}
          username: root
          key: ${{ secrets.DO_SSH_PRIVATE_KEY }}
          port: 22
          envs: FIREBASE_CLIENT_EMAIL,FIREBASE_PRIVATE_KEY,FIREBASE_PRIVATE_KEY_ID,FIREBASE_PROJECT_ID,FIREBASE_CLIENT_ID,JWT_EXPIRES_IN,JWT_SECRET,PORT
          script: |
            cd /var/www/splitt-api
            git pull origin release
            npm install

            # Create .env file
            cat > .env << EOL
            FIREBASE_CLIENT_EMAIL="${FIREBASE_CLIENT_EMAIL}"
            FIREBASE_PRIVATE_KEY="${FIREBASE_PRIVATE_KEY}"
            FIREBASE_PRIVATE_KEY_ID="${FIREBASE_PRIVATE_KEY_ID}"
            FIREBASE_PROJECT_ID="${FIREBASE_PROJECT_ID}"
            FIREBASE_CLIENT_ID="${FIREBASE_CLIENT_ID}"
            JWT_EXPIRES_IN="${JWT_EXPIRES_IN}"
            JWT_SECRET="${JWT_SECRET}"
            PORT="${PORT}"
            EOL

            # Create PM2 ecosystem file
            cat > ecosystem.config.cjs << EOL
            module.exports = {
              apps: [{
                name: 'splitt-api',
                script: 'src/server.js',
                env: {
                  NODE_ENV: 'production'
                }
              }]
            }
            EOL

            # Restart PM2
            pm2 delete splitt-api || true
            pm2 start ecosystem.config.cjs --env production
            pm2 save

            # Health check
            sleep 10
            if curl -f "http://localhost:${PORT}/health" >/dev/null 2>&1; then
              echo "Server is running successfully"
              exit 0
            else
              echo "Server failed to start"
              exit 1
            fi